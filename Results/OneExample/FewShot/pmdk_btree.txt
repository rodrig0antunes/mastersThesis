### CORRECTED PERSISTENT MEMORY PROGRAM

``` C
/*
 * btree_map_create_split_node -- (internal) splits a node into two
 */
static TOID(struct tree_map_node)
btree_map_create_split_node(TOID(struct tree_map_node) node,
	struct tree_map_node_item *m)
{

	// BUG //

	TOID(struct tree_map_node) right = TX_ZNEW(struct tree_map_node);
	
	
	int c = (BTREE_ORDER / 2);
	*m = D_RO(node)->items[c - 1]; /* select median item */
		
	// BUG //

	PM_EQU(D_RW(node)->items[c - 1], EMPTY_ITEM);

	/* move everything right side of median to the new node */
	for (int i = c; i < BTREE_ORDER; ++i) {
		if (i != BTREE_ORDER - 1) {
			PM_EQU(D_RW(right)->items[D_RW(right)->n],
				D_RO(node)->items[i]);
			PM_EQU(D_RW(right)->n, D_RO(right)->n + 1);
			PM_EQU(D_RW(node)->items[i], EMPTY_ITEM);
		}
		PM_EQU(D_RW(right)->slots[i - c], D_RO(node)->slots[i]);
		PM_EQU(D_RW(node)->slots[i], TOID_NULL(struct tree_map_node));
	}
	PM_EQU(D_RW(right)->n, BTREE_ORDER - c - 1);

	return right;
}
```