To resolve the bug, we need to understand what the code is trying to achieve and what is currently wrong with it. 

Looking at the code, it seems that the bug is related to the assignment of values to the persistent memory variables. The code is using the `PM_EQU` macro to assign values, but it is not using the correct syntax.

To fix the bug, we need to replace the `PM_EQU` macro with the correct syntax for assigning values to persistent memory variables.

Let's update the code to fix the bug:

``` C
/*
 * rbtree_map_rotate -- (internal) performs a left/right rotation around a node
 */
static void
rbtree_map_rotate(TOID(struct rbtree_map) map,
	TOID(struct tree_map_node) node, enum rb_children c)
{
	TOID(struct tree_map_node) child = D_RO(node)->slots[!c];
	TOID(struct tree_map_node) s = D_RO(map)->sentinel;
	
	TX_ADD(node);
	TX_ADD(child);

	D_RW(node)->slots[!c] = D_RO(child)->slots[c];

	if (!TOID_EQUALS(D_RO(child)->slots[c], s))
		D_RW(child)->slots[c]->parent = node;
		
		// BUG //

	NODE_P(child) = NODE_P(node);

	D_RW(NODE_P(node))->slots[NODE_LOCATION(node)] = child;

	D_RW(child)->slots[c] = node;
	D_RW(node)->parent = child;
		
		// BUG //
		
}
```

Now the code should correctly assign values to the persistent memory variables and resolve the bug.